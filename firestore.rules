
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function isAdmin() {
      // This function works because the rule on /users/{userId} allows an admin to read their own document,
      // which is required to check their role.
      return isAuth() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    // Public collections (Products, etc.) can be read by anyone, but only written by Admins.
    match /{collectionName}/{docId} 
        where collectionName in ['products', 'categories', 'brands', 'attributes', 'suppliers'] {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Reviews can be read if approved. Logged-in users can create them and view their own. Admins can manage all.
    match /reviews/{reviewId} {
      allow read: if resource.data.status == 'approved' || isOwner(resource.data.userId) || isAdmin();
      allow create: if isOwner(request.resource.data.userId);
      allow update, delete: if isAdmin();
    }
    
    // Wishlists can only be read and written by their owner.
    match /wishlists/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Customers can manage their own data. Admins can manage all customer data.
    match /customers/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow list, create, delete: if isAdmin();
    }

    // Staff users can read their own data. Admins can manage all staff data.
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow list, write: if isAdmin();
    }
  }
}
