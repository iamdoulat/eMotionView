
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin.
    // This checks for the existence of a document in the /admins collection
    // where the document ID is the user's UID.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Admins can read/write anything in the admins collection.
    match /admins/{userId} {
      allow read, write: if isAdmin();
    }
    
    // Products are publicly readable. Only admins can modify them.
    match /products/{productId} {
      allow get, list: if true;
      allow write: if isAdmin();
    }

    // Categories, brands, attributes, suppliers are publicly readable. Only admins can modify.
    match /categories/{docId} {
      allow get, list: if true;
      allow write: if isAdmin();
    }
    match /brands/{docId} {
      allow get, list: if true;
      allow write: if isAdmin();
    }
    match /attributes/{docId} {
      allow get, list: if true;
      allow write: if isAdmin();
    }
    match /suppliers/{docId} {
      allow get, list: if true;
      allow write: if isAdmin();
    }

    // Reviews are publicly readable. Authenticated users can create them. Admins can moderate.
    match /reviews/{reviewId} {
      allow get, list: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if isAdmin();
    }

    // Customers collection rules
    match /customers/{userId} {
      // Admins can perform any action on any customer document or the collection.
      allow read, write: if isAdmin();
      
      // A customer can get and update their own document.
      allow get, update: if request.auth != null && request.auth.uid == userId;
      
      // A new user can create their own customer document during sign-up.
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Staff users collection rules
    match /users/{userId} {
      // Admins can perform any action on any user document or the collection.
      allow read, write: if isAdmin();
      
      // A staff member can read their own user document (e.g., to get their role).
      allow get: if request.auth != null && request.auth.uid == userId;
    }
  }
}
