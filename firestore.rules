rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper Functions
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Manager'];
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Collection Rules
    match /products/{productId} {
      allow read;
      allow write: if isAdmin();
    }

    match /reviews/{reviewId} {
      allow get: if resource.data.status == 'approved';
      allow list: if query.get('status') == 'approved';
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }

    match /users/{userId} {
      allow read, write: if isAdmin();
    }

    match /customers/{userId} {
      allow get, update: if isOwner(userId) || isAdmin();
      allow list, create, delete: if isAdmin();
    }

    match /wishlists/{userId} {
       allow read, write: if isOwner(userId);
    }

    match /public_content/{document=**} {
      allow read;
      allow write: if isAdmin();
    }
  }
}
