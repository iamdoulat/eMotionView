
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for Admin or Manager roles
    function isAdmin() {
      return request.auth != null && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Manager'];
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // PUBLIC CONTENT: Products, Categories, Brands, Suppliers, and public homepage content are readable by anyone.
    // Only admins can write to them.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /brands/{brandId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /suppliers/{supplierId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /public_content/{document=**} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    // SETTINGS & PAGES: Only readable and writable by admins.
    match /settings/{document=**} {
      allow read, write: if isAdmin();
    }
    match /pages/{pageId} {
       allow read, write: if isAdmin();
    }

    // REVIEWS: Authenticated users can create reviews.
    // Public can read approved reviews (filtered in queries). Admins can manage all.
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }
    
    // CUSTOMERS: Customers can manage their own data. Admins have full access.
    match /customers/{userId} {
        allow read, update: if isOwner(userId) || isAdmin();
        allow delete: if isAdmin();
        // New customers are created via a backend function (sign-up), not direct client write.
    }

    // USERS (STAFF): Only admins can manage staff roles. Authenticated users can read their own role.
    match /users/{userId} {
      allow read: if request.auth != null; // Allows isAdmin() to work for any logged-in user
      allow list, write: if isAdmin();
    }
    
    // WISHLISTS: Users can only manage their own wishlist.
    match /wishlists/{userId} {
        allow read, write: if isOwner(userId);
    }
    
    // ANALYTICS: Allow anyone to increment visitor counts.
    match /analytics/{document=**} {
      allow write: if true;
    }

    // Catch-all: Deny all other reads/writes by default
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
