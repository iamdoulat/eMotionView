
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated.
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is an Admin.
    // This checks for the existence of the user's UID in the /admins collection.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    // Helper function to check if the user is the owner of the document.
    function isOwner(userId) {
        return isAuthenticated() && request.auth.uid == userId;
    }

    // PUBLIC COLLECTIONS: Products and related catalog data can be read by anyone.
    // Only Admins can modify the catalog.
    match /products/{doc=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /categories/{doc=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /brands/{doc=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /attributes/{doc=**} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /suppliers/{doc=**} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // REVIEWS: Anyone can read. Authenticated users can create. Admins can moderate.
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }
    
    // CUSTOMERS: Admins can read/write any. Customers can only read/write their own data.
    match /customers/{customerId} {
      allow create: if isOwner(customerId);
      allow read, update: if isOwner(customerId) || isAdmin();
      allow list: if isAdmin();
      allow delete: if isAdmin();
    }

    // USERS (Staff/Admins): Admins can manage staff. Staff can read their own profile for role checks.
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow list, create, update, delete: if isAdmin();
    }

    // ORDERS: Admins can manage all orders. Customers can only manage their own.
    match /orders/{orderId} {
        allow create: if isAuthenticated() && request.auth.uid == request.resource.data.userId;
        allow read, update: if isAdmin() || (isAuthenticated() && request.auth.uid == resource.data.userId);
        allow list: if isAdmin();
        allow delete: if isAdmin();
    }

    // ADMINS: This collection is used for role checks and should be locked down.
    // No one can read or write to this collection directly through the client/app.
    match /admins/{adminId} {
        allow read, write: if false;
    }
  }
}
