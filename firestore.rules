rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for Admin role from a separate admins collection.
    // This is a secure way to manage roles without recursion issues.
    function isUserAdmin(userId) {
      return exists(/databases/$(database)/documents/admins/$(userId));
    }
    
    // Helper function to check if the user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is the owner of a document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // --- PUBLIC COLLECTIONS ---
    // These collections are readable by anyone, including unauthenticated users.
    match /products/{productId} {
      allow read: if true;
    }
    match /categories/{categoryId} {
      allow read: if true;
    }
    match /brands/{brandId} {
      allow read: if true;
    }
     match /suppliers/{supplierId} {
      allow read: if true;
    }
     match /attributes/{attributeId} {
      allow read: if true;
    }
    match /reviews/{reviewId} {
      // Anyone can read approved reviews. Admins can read any review.
      allow read: if resource.data.status == 'approved' || isUserAdmin(request.auth.uid);
      // Any signed-in user can create a review.
      allow create: if isSignedIn();
      // Admins can update/delete reviews.
      allow update, delete: if isUserAdmin(request.auth.uid);
    }

    // --- CUSTOMER-SPECIFIC COLLECTIONS ---
    match /customers/{userId} {
      // A user can create their own customer document during sign-up.
      allow create: if isSignedIn() && isOwner(userId);
      
      // A customer can read/update their own data.
      // Admins have full access to any customer's data.
      allow read, update: if isOwner(userId) || isUserAdmin(request.auth.uid);
      allow delete: if isUserAdmin(request.auth.uid);
      
      // Admins can list all customers for the admin panel.
      allow list: if isUserAdmin(request.auth.uid);
    }
    
    // --- STAFF/ADMIN COLLECTIONS ---
    match /users/{userId} {
        // Only admins can manage staff members (create, read, update, delete, list).
        allow read, write, list: if isUserAdmin(request.auth.uid);
    }

    // --- ADMINS COLLECTION ---
    // Secures the collection that defines who is an admin.
    match /admins/{userId} {
      // Only other admins can see who is an admin or make someone an admin.
      allow read, write: if isUserAdmin(request.auth.uid);
    }
  }
}
