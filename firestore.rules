
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Manager'];
    }

    // Products can be read by anyone, but only written by admins.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Reviews can be read if approved. Can be created by any authenticated user.
    // Can be updated/deleted by admins or the user who wrote it.
    match /reviews/{reviewId} {
      allow read: if resource.data.status == 'approved' || request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth.uid != null;
      allow update, delete: if request.auth.uid == resource.data.userId || isAdmin();
    }

    // Public content is readable by all, but only writable by admins.
    match /public_content/{docId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Categories are readable by all, writable by admins.
    match /categories/{catId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Brands, Attributes, Suppliers are readable by all, writable by admins.
    match /(brands|attributes|suppliers)/{docId} {
        allow read: if true;
        allow write: if isAdmin();
    }

    // Customers can manage their own data. Admins can manage all customer data.
    match /customers/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow write: if isAdmin(); // Admin can create/overwrite
    }

    // Users (staff) can only be managed by Admins.
    match /users/{userId} {
      allow read, write: if isAdmin();
    }
    
    // Wishlists are private to each user.
    match /wishlists/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Fallback rule
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
