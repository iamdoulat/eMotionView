rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isStaff() {
      // Securely checks if a user is in the 'users' collection (Admin, Manager, Staff).
      return isAuthenticated() && exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }
    
    function isAdmin() {
      // Securely checks if a user has the 'Admin' role.
      // This is only called after isStaff() confirms the document exists.
      return isStaff() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Collection: users (Admin, Staff, etc.)
    match /users/{userId} {
      // Admins can get any staff profile. Staff can get their own.
      allow get: if isAdmin() || (isAuthenticated() && request.auth.uid == userId);
      // Only Admins can list all staff users.
      allow list: if isAdmin();
      // Only Admins can create, update, or delete staff users.
      allow write: if isAdmin();
    }
    
    // Collection: customers
    match /customers/{userId} {
      // A customer can get their own data. Staff can get any customer's data.
      allow get: if (isAuthenticated() && request.auth.uid == userId) || isStaff();
      // Only staff can list all customers.
      allow list: if isStaff();
      // A user can create their own customer document upon sign-up.
      allow create: if isAuthenticated() && request.auth.uid == userId;
      // A customer can update their own data. Staff can update any customer's data.
      allow update: if (isAuthenticated() && request.auth.uid == userId) || isStaff();
      // Only Admins can delete customer documents.
      allow delete: if isAdmin();
    }

    // Collections: products, categories, brands, suppliers, attributes
    match /{collection}/{docId} 
      where collection in ['products', 'categories', 'brands', 'suppliers', 'attributes'] {
      // Anyone can read product-related data.
      allow read: if true;
      // Only staff can modify product-related data.
      allow write: if isStaff();
    }

    // Collection: reviews
    match /reviews/{reviewId} {
      // Anyone can read an approved review. Staff can read any review.
      allow get: if resource.data.status == 'approved' || isStaff();
      
      // Only staff can list all reviews for moderation.
      // Client-side queries for approved reviews are secured by the `get` rule.
      allow list: if isStaff();

      // Authenticated users can create a review for themselves.
      // It must be created with a 'pending' status.
      allow create: if isAuthenticated()
                    && request.resource.data.userId == request.auth.uid
                    && request.resource.data.status == 'pending';
                    
      // Only staff can update reviews (to approve, reject, or add a reply).
      allow update: if isStaff();
      
      // Only staff can delete reviews.
      allow delete: if isStaff();
    }
    
    // Collection: wishlists
    match /wishlists/{userId} {
      // A user can only read and write to their own wishlist document.
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
    }
  }
}
