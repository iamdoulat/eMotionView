rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // Check if the user is authenticated and their role is 'Admin' in Firestore
      // It's safer to check the resource in the `users` collection directly.
      return request.auth != null &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Admins can read/write any user document.
    // Individual users can read their own document.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if isAdmin();
    }
    
    // Admins can read/write any customer document.
    // Customers can read their own document and update their own (but not change role/status).
    match /customers/{userId} {
      allow read, update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create, delete: if isAdmin(); // Only admins can create/delete full customer docs
    }
    
    // Products are publicly readable, but only admins can write.
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Reviews can be created by any authenticated user.
    // They can be read if approved.
    // Only admins can approve, update, or delete them.
    match /reviews/{reviewId} {
      allow create: if request.auth != null;
      allow read: if resource.data.status == 'approved' || isAdmin();
      allow update, delete: if isAdmin();
    }

    // Wishlists are private to the user.
    match /wishlists/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Public content like homepage settings is readable by anyone.
    // Only admins can change it.
    match /public_content/{document=**} {
        allow read: if true;
        allow write: if isAdmin();
    }
  }
}
