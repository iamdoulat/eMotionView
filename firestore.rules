
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // == Helper Functions ==
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Checks if the requesting user has an Admin/Manager/Staff role in the 'users' collection.
    // The `exists()` check is crucial. It prevents errors for users (like customers)
    // who do not have a document in the 'users' collection.
    function isRequestingUserStaff() {
      return isSignedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Manager', 'Staff'];
    }

    // Checks if the requesting user has an Admin role.
    function isRequestingUserAdmin() {
      return isSignedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // == Collection Rules ==

    // USERS (Staff, Admins, Managers)
    match /users/{userId} {
      // Who can read? The user themselves, or any staff member.
      allow read: if isOwner(userId) || isRequestingUserStaff();
      // Who can list? Only staff members.
      allow list: if isRequestingUserStaff();
      // Who can write? The user themselves, or an Admin.
      allow write: if isOwner(userId) || isRequestingUserAdmin();
    }
    
    // CUSTOMERS
    match /customers/{customerId} {
      // Who can read? The customer themselves, or any staff member.
      allow read: if isOwner(customerId) || isRequestingUserStaff();
      // Who can list? Only staff members.
      allow list: if isRequestingUserStaff();
      // Who can create? Any signed-in user (for sign-up).
      allow create: if isSignedIn();
      // Who can update? The customer themselves.
      allow update: if isOwner(customerId);
      // Who can delete? Only Admins.
      allow delete: if isRequestingUserAdmin();
    }
    
    // PRODUCTS & PUBLIC DATA (Categories, Brands, etc.)
    // Anyone can read products and related metadata. Only staff can write.
    match /{collection}/{docId} 
      where collection in ['products', 'categories', 'brands', 'attributes', 'suppliers'] {
        allow read: if true;
        allow write: if isRequestingUserStaff();
    }
    
    // REVIEWS
    match /reviews/{reviewId} {
      // Who can read? Everyone (for approved reviews). The app filters by status.
      allow read: if true;
      // Who can create? Any signed-in user.
      allow create: if isSignedIn();
      // Who can update/delete? Only staff (for moderation).
      allow update, delete: if isRequestingUserStaff();
    }
    
    // WISHLISTS
    match /wishlists/{userId} {
      // A user can only access their own wishlist.
      allow read, write: if isOwner(userId);
    }
  }
}
