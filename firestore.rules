
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin or manager/staff
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    // Helper function to check if the user owns the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Products: Publicly readable, admin writable
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Categories, Brands, etc: Publicly readable, admin writable
    match /categories/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /brands/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /attributes/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    match /suppliers/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Reviews:
    // - Anyone can read approved reviews. Admins can read all.
    // - Authenticated users can create their own reviews.
    // - Admins can update/delete any review.
    match /reviews/{reviewId} {
      allow read: if resource.data.status == 'approved' || isAdmin();
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAdmin();
    }
    
    // Wishlists: Users can only access their own wishlist.
    match /wishlists/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Customers:
    // - Admins can read/write any customer document.
    // - Customers can create their own document on sign-up.
    // - Customers can read/update their own document.
    match /customers/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
      allow delete: if isAdmin();
    }
    
    // Users (Staff): Admins can manage staff members.
    match /users/{userId} {
      allow read, write: if isAdmin();
    }
  }
}
