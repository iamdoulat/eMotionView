
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUserAdmin() {
      // Check if the authenticated user has an 'Admin' role in the 'users' collection.
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }
    
    function isOwner(userId) {
      return isUserAuthenticated() && request.auth.uid == userId;
    }

    // Public Collections (Read-Only for everyone)
    match /products/{docId} {
      allow read: if true;
      allow write: if isUserAdmin();
    }
    match /brands/{docId} {
      allow read: if true;
      allow write: if isUserAdmin();
    }
    match /categories/{docId} {
      allow read: if true;
      allow write: if isUserAdmin();
    }
    match /attributes/{docId} {
      allow read: if true;
      allow write: if isUserAdmin();
    }
    match /suppliers/{docId} {
      allow read: if true;
      allow write: if isUserAdmin();
    }
    
    // Reviews: Publicly readable, but only logged-in users can create. Admins can moderate.
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if isUserAuthenticated();
      allow update, delete: if isUserAdmin();
    }

    // Users Collection (for Staff/Admins)
    // Only admins can create/delete staff. Staff members can read/update their own profile.
    match /users/{userId} {
      allow read, update: if isOwner(userId) || isUserAdmin();
      allow create, delete: if isUserAdmin();
      allow list: if isUserAdmin();
    }
    
    // Customers Collection
    // Customers can create, read, and update their own document. Admins can manage all customer documents.
    match /customers/{userId} {
      allow create: if isOwner(userId);
      allow read, update: if isOwner(userId) || isUserAdmin();
      allow delete, list: if isUserAdmin();
    }
  }
}
