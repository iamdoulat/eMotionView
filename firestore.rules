
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin or manager
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['Admin', 'Manager'];
    }

    // Products can be read by anyone, written by admins
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Reviews can be created by any logged-in user.
    // Approved reviews can be read by anyone.
    // Admins can manage all reviews.
    match /reviews/{reviewId} {
      allow read: if resource.data.status == 'approved';
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
    }

    // Public content (homepage layout, etc.) can be read by anyone, written by admins.
    match /public_content/{document=**} {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    // Categories, brands, suppliers, etc. can be read by anyone, written by admins.
    match /categories/{docId} { allow read: if true; allow write: if isAdmin(); }
    match /brands/{docId} { allow read: if true; allow write: if isAdmin(); }
    match /attributes/{docId} { allow read: if true; allow write: if isAdmin(); }
    match /suppliers/{docId} { allow read: if true; allow write: if isAdmin(); }

    // Customers can manage their own data, Admins can manage any customer
    match /customers/{userId} {
      allow create: if request.auth != null;
      allow read, update, delete: if (request.auth != null && request.auth.uid == userId) || isAdmin();
    }

    // Admins can manage all staff users
    match /users/{userId} {
      allow read, write: if isAdmin();
    }

    // Wishlists are private to the user
    match /wishlists/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}
