rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin or staff.
    function isStaff() {
      return request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid));
    }

    // Helper function to check if a user is the owner of a document.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // PRODUCTS: Public can read and list, staff can write.
    match /products/{productId} {
      allow get, list: if true;
      allow create, update, delete: if isStaff();
    }

    // REVIEWS: Public can read. Customers can create their own. Staff can moderate.
    match /reviews/{reviewId} {
        allow get, list: if true;
        allow create: if isOwner(request.resource.data.userId);
        allow update, delete: if isStaff();
    }

    // CATEGORIES, BRANDS, ATTRIBUTES, SUPPLIERS: Public read, staff write.
    match /categories/{categoryId} {
      allow get, list: if true;
      allow create, update, delete: if isStaff();
    }
    match /brands/{brandId} {
      allow get, list: if true;
      allow create, update, delete: if isStaff();
    }
    match /attributes/{attributeId} {
      allow get, list: if true;
      allow create, update, delete: if isStaff();
    }
    match /suppliers/{supplierId} {
      allow get, list: if true;
      allow create, update, delete: if isStaff();
    }

    // CUSTOMERS:
    // Customers can create, read, and update their own document.
    // Staff can read, list, and delete all customer documents.
    match /customers/{userId} {
      allow create: if isOwner(userId);
      allow get, update: if isOwner(userId);
      allow list, get, delete: if isStaff();
    }

    // USERS (STAFF): Staff can manage other staff members.
    match /users/{userId} {
      allow get, list, create, update, delete: if isStaff();
    }

    // ORDERS:
    // Customers can create and read their own orders.
    // Staff can read and update any order.
    match /orders/{orderId} {
        allow create: if isOwner(request.resource.data.userId);
        allow get, list: if isOwner(resource.data.userId) || isStaff();
        allow update: if isStaff();
    }
  }
}
