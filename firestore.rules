rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      // Check if the user's role is Admin by looking up their document in the 'users' collection.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Products can be read by anyone, but only written by admins.
    match /products/{productId} {
      allow read;
      allow write: if isAdmin();
    }
    
    // An authenticated user can read their own user document.
    // Admins can manage all users.
    match /users/{userId} {
        allow read: if request.auth.uid == userId;
        allow write: if isAdmin();
        allow list: if isAdmin();
    }

    // Customers can read/write their own data. Admins can manage all customers.
    match /customers/{userId} {
        allow read, write: if request.auth.uid == userId;
        allow list, update, delete: if isAdmin();
    }
    
    // Reviews can be read if approved, created by any auth'd user, managed by admin.
    match /reviews/{reviewId} {
        // Allow reading a single document if its status is 'approved'.
        allow get: if resource.data.status == 'approved';
        // Allow listing documents only if the query explicitly filters for approved reviews.
        // This is crucial for the product details page to fetch reviews.
        allow list: if query.get('status') == 'approved';
        
        allow create: if request.auth != null;
        allow update, delete: if isAdmin();
    }
    
    // Wishlists are private to the owner.
    match /wishlists/{userId} {
       allow read, write: if request.auth.uid == userId;
    }
    
    // Homepage public content can be read by anyone and written by admins.
    match /public_content/{document=**} {
      allow read;
      allow write: if isAdmin();
    }
  }
}
